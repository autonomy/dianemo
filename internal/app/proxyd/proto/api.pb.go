// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package proto

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The response message containing the proxyd backend status.
type BackendsReply struct {
	Backends             []*Backend `protobuf:"bytes,1,rep,name=backends,proto3" json:"backends,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *BackendsReply) Reset()         { *m = BackendsReply{} }
func (m *BackendsReply) String() string { return proto.CompactTextString(m) }
func (*BackendsReply) ProtoMessage()    {}
func (*BackendsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *BackendsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BackendsReply.Unmarshal(m, b)
}

func (m *BackendsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BackendsReply.Marshal(b, m, deterministic)
}

func (m *BackendsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackendsReply.Merge(m, src)
}

func (m *BackendsReply) XXX_Size() int {
	return xxx_messageInfo_BackendsReply.Size(m)
}

func (m *BackendsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BackendsReply.DiscardUnknown(m)
}

var xxx_messageInfo_BackendsReply proto.InternalMessageInfo

func (m *BackendsReply) GetBackends() []*Backend {
	if m != nil {
		return m.Backends
	}
	return nil
}

// Backend represents the proxyd backend
type Backend struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Addr                 string   `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Connections          uint32   `protobuf:"varint,3,opt,name=connections,proto3" json:"connections,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Backend) Reset()         { *m = Backend{} }
func (m *Backend) String() string { return proto.CompactTextString(m) }
func (*Backend) ProtoMessage()    {}
func (*Backend) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *Backend) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Backend.Unmarshal(m, b)
}

func (m *Backend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Backend.Marshal(b, m, deterministic)
}

func (m *Backend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Backend.Merge(m, src)
}

func (m *Backend) XXX_Size() int {
	return xxx_messageInfo_Backend.Size(m)
}

func (m *Backend) XXX_DiscardUnknown() {
	xxx_messageInfo_Backend.DiscardUnknown(m)
}

var xxx_messageInfo_Backend proto.InternalMessageInfo

func (m *Backend) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Backend) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *Backend) GetConnections() uint32 {
	if m != nil {
		return m.Connections
	}
	return 0
}

func init() {
	proto.RegisterType((*BackendsReply)(nil), "proto.BackendsReply")
	proto.RegisterType((*Backend)(nil), "proto.Backend")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 222 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0x2c, 0xc8, 0xd4,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x52, 0xd2, 0xe9, 0xf9, 0xf9, 0xe9, 0x39,
	0xa9, 0xfa, 0x60, 0x5e, 0x52, 0x69, 0x9a, 0x7e, 0x6a, 0x6e, 0x41, 0x49, 0x25, 0x44, 0x8d, 0x92,
	0x35, 0x17, 0xaf, 0x53, 0x62, 0x72, 0x76, 0x6a, 0x5e, 0x4a, 0x71, 0x50, 0x6a, 0x41, 0x4e, 0xa5,
	0x90, 0x16, 0x17, 0x47, 0x12, 0x54, 0x40, 0x82, 0x51, 0x81, 0x59, 0x83, 0xdb, 0x88, 0x0f, 0xa2,
	0x54, 0x0f, 0xaa, 0x2e, 0x08, 0x2e, 0xaf, 0xe4, 0xcf, 0xc5, 0x0e, 0x15, 0x14, 0xe2, 0xe3, 0x62,
	0xca, 0x4c, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x62, 0xca, 0x4c, 0x11, 0x12, 0xe2, 0x62,
	0x49, 0x4c, 0x49, 0x29, 0x92, 0x60, 0x02, 0x8b, 0x80, 0xd9, 0x42, 0x0a, 0x5c, 0xdc, 0xc9, 0xf9,
	0x79, 0x79, 0xa9, 0xc9, 0x25, 0x99, 0xf9, 0x79, 0xc5, 0x12, 0xcc, 0x0a, 0x8c, 0x1a, 0xbc, 0x41,
	0xc8, 0x42, 0x46, 0x4e, 0x5c, 0x6c, 0x01, 0x45, 0xf9, 0x15, 0x95, 0x29, 0x42, 0x16, 0x5c, 0x1c,
	0x30, 0x77, 0x09, 0x89, 0xe9, 0x41, 0x7c, 0xa0, 0x07, 0xf3, 0x81, 0x9e, 0x2b, 0xc8, 0x07, 0x52,
	0x22, 0xa8, 0x0e, 0x83, 0x78, 0xc0, 0x49, 0x8e, 0x8b, 0x33, 0x39, 0x3f, 0x17, 0x22, 0xe5, 0xc4,
	0xe1, 0x58, 0x90, 0x19, 0x00, 0x62, 0x05, 0x30, 0x46, 0x41, 0x82, 0x23, 0x89, 0x0d, 0x4c, 0x19,
	0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x0b, 0x1f, 0xc0, 0xf4, 0x29, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProxydClient is the client API for Proxyd service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProxydClient interface {
	Backends(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*BackendsReply, error)
}

type proxydClient struct {
	cc *grpc.ClientConn
}

func NewProxydClient(cc *grpc.ClientConn) ProxydClient {
	return &proxydClient{cc}
}

func (c *proxydClient) Backends(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*BackendsReply, error) {
	out := new(BackendsReply)
	err := c.cc.Invoke(ctx, "/proto.Proxyd/Backends", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProxydServer is the server API for Proxyd service.
type ProxydServer interface {
	Backends(context.Context, *empty.Empty) (*BackendsReply, error)
}

func RegisterProxydServer(s *grpc.Server, srv ProxydServer) {
	s.RegisterService(&_Proxyd_serviceDesc, srv)
}

func _Proxyd_Backends_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProxydServer).Backends(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Proxyd/Backends",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProxydServer).Backends(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Proxyd_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Proxyd",
	HandlerType: (*ProxydServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Backends",
			Handler:    _Proxyd_Backends_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}
