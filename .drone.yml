---
kind: pipeline
name: default

services:
  - name: docker
    image: docker:dind
    privileged: true
    command:
      - --dns=8.8.8.8
    volumes:
      - name: dockersock
        path: /var/run
      - name: dev
        path: /dev
      - name: tmp
        path: /tmp
  - name: buildkit
    image: moby/buildkit:v0.5.1
    privileged: true
    volumes:
      - name: buildkitsock
        path: /run/buildkit
      - name: buildkit-storage
        path: /var/lib/buildkit

steps:
  - name: fetch
    image: docker:git
    commands:
      - git fetch --tags
    when:
      event: tag

  - name: lint
    image: autonomy/build-container:latest
    pull: always
    environment:
      BUILDKIT_HOST: tcp://buildkitd.ci.svc:1234
      BINDIR: /usr/local/bin
    commands:
      - make lint
    volumes:
      - name: buildkitsock
        path: /run/buildkit
    depends_on:
      - fetch

  # We'll use this step to load the hyperkube image to save
  # some time for the integration test later
  #- name: seed-image
  #  image: autonomy/build-container:latest
  #  commands:
  #    - docker pull k8s.gcr.io/hyperkube:v1.15.0
  #  volumes:
  #    - name: dockersock
  #      path: /var/run
  #  depends_on:
  #    - lint

  # This next chunk of builds contain all the app level builds
  # for talos.
  - name: build-init
    image: autonomy/build-container:latest
    pull: always
    environment:
      BUILDKIT_HOST: tcp://buildkitd.ci.svc:1234
      BINDIR: /usr/local/bin
    commands:
      - make initramfs
    volumes:
      - name: buildkitsock
        path: /run/buildkit
    depends_on:
      - lint

  - name: build-osd
    image: autonomy/build-container:latest
    pull: always
    environment:
      BUILDKIT_HOST: tcp://buildkitd.ci.svc:1234
      BINDIR: /usr/local/bin
    commands:
      - make osd
    volumes:
      - name: buildkitsock
        path: /run/buildkit
    depends_on:
      - lint

  - name: build-trustd
    image: autonomy/build-container:latest
    pull: always
    environment:
      BUILDKIT_HOST: tcp://buildkitd.ci.svc:1234
      BINDIR: /usr/local/bin
    commands:
      - make trustd
    volumes:
      - name: buildkitsock
        path: /run/buildkit
    depends_on:
      - lint

  - name: build-proxyd
    image: autonomy/build-container:latest
    pull: always
    environment:
      BUILDKIT_HOST: tcp://buildkitd.ci.svc:1234
      BINDIR: /usr/local/bin
    commands:
      - make proxyd
    volumes:
      - name: buildkitsock
        path: /run/buildkit
    depends_on:
      - lint

  - name: build-ntpd
    image: autonomy/build-container:latest
    pull: always
    environment:
      BUILDKIT_HOST: tcp://buildkitd.ci.svc:1234
      BINDIR: /usr/local/bin
    commands:
      - make ntpd
    volumes:
      - name: buildkitsock
        path: /run/buildkit
    depends_on:
      - lint

  - name: build-osctl-darwin
    image: autonomy/build-container:latest
    pull: always
    environment:
      BUILDKIT_HOST: tcp://buildkitd.ci.svc:1234
      BINDIR: /usr/local/bin
    commands:
      - make osctl-darwin-amd64
    volumes:
      - name: buildkitsock
        path: /run/buildkit
    depends_on:
      - lint

  - name: build-osctl-linux
    image: autonomy/build-container:latest
    pull: always
    environment:
      BUILDKIT_HOST: tcp://buildkitd.ci.svc:1234
      BINDIR: /usr/local/bin
    commands:
      - make osctl-linux-amd64
    volumes:
      - name: buildkitsock
        path: /run/buildkit
    depends_on:
      - lint

  # Once all of the app level builds are complete we can proceed
  # to building out the rootfs
  - name: rootfs
    image: autonomy/build-container:latest
    pull: always
    environment:
      BUILDKIT_HOST: tcp://buildkitd.ci.svc:1234
      BINDIR: /usr/local/bin
    commands:
      - make rootfs
    volumes:
      - name: dockersock
        path: /var/run
      - name: buildkitsock
        path: /run/buildkit
    depends_on:
      - build-osd
      - build-proxyd
      - build-trustd
      - build-ntpd

  - name: installer
    image: autonomy/build-container:latest
    pull: always
    environment:
      BUILDKIT_HOST: tcp://buildkitd.ci.svc:1234
      BINDIR: /usr/local/bin
    commands:
      - make installer
    volumes:
      - name: dockersock
        path: /var/run
      - name: buildkitsock
        path: /run/buildkit
    depends_on:
      - rootfs

  - name: talos-image
    image: autonomy/build-container:latest
    pull: always
    environment:
      BUILDKIT_HOST: tcp://buildkitd.ci.svc:1234
      BINDIR: /usr/local/bin
    commands:
      - make talos
    volumes:
      - name: dockersock
        path: /var/run
      - name: buildkitsock
        path: /run/buildkit
    depends_on:
      - rootfs
      - build-init
      - build-osctl-linux

  - name: test
    image: autonomy/build-container:latest
    pull: always
    environment:
      BUILDKIT_HOST: tcp://buildkitd.ci.svc:1234
      BINDIR: /usr/local/bin
    commands:
      - make test
    volumes:
      - name: dockersock
        path: /var/run/
      - name: buildkitsock
        path: /run/buildkit
    depends_on:
      - rootfs

  - name: coverage
    image: plugins/codecov
    settings:
      token:
        from_secret: codecov_token
      files:
        - coverage.txt
    depends_on:
      - test

  - name: basic-integration
    image: autonomy/build-container:latest
    pull: always
    environment:
      BINDIR: /usr/local/bin
    commands:
      - make basic-integration
      - cp build/osctl-linux-amd64 /tmp/osctl
      - cd /tmp
      - ./osctl config generate cluster.local 1.2.3.4,2.3.4.5,3.4.5.6
    volumes:
      - name: dockersock
        path: /var/run
      - name: tmp
        path: /tmp
    depends_on:
      - talos-image

  # - name: e2e-integration
  #   image: autonomy/build-container:latest
  #   pull: always
  #   ## Ignore errors for now, until we get the flakiness resolved in beta
  #   err_ignore: true
  #   environment:
  #     BUILDKIT_HOST: tcp://buildkitd.ci.svc:1234
  #     BINDIR: /usr/local/bin
  #     PACKET_AUTH_TOKEN:
  #       from_secret: packet_auth_token
  #     PACKET_PROJECT_ID:
  #       from_secret: packet_project_id
  #     PACKET_PXE_SERVER:
  #       from_secret: packet_pxe_server
  #   commands:
  #     - make e2e-integration
  #   volumes:
  #     - name: dockersock
  #       path: /var/run
  #     - name: tmp
  #       path: /tmp
  #   when:
  #     event:
  #       - push
  #       - tag
  #     branch:
  #       - master
  #   depends_on:
  #     - basic-integration

  - name: iso
    image: autonomy/build-container:latest
    pull: always
    environment:
      BUILDKIT_HOST: tcp://buildkitd.ci.svc:1234
      BINDIR: /usr/local/bin
    commands:
      - make talos-iso
    volumes:
      - name: dockersock
        path: /var/run
      - name: buildkitsock
        path: /run/buildkit
    when:
      event: tag
    depends_on:
      ## Should change to e2e once we get things more stable
      - basic-integration

  - name: gce
    image: autonomy/build-container:latest
    pull: always
    environment:
      BUILDKIT_HOST: tcp://buildkitd.ci.svc:1234
      BINDIR: /usr/local/bin
    commands:
      - make talos-gce
    volumes:
      - name: dockersock
        path: /var/run
      - name: dev
        path: /dev
      - name: buildkitsock
        path: /run/buildkit
    when:
      event: tag
    depends_on:
      ## Should change to e2e once we get things more stable
      - basic-integration

  - name: push
    image: autonomy/build-container:latest
    pull: always
    environment:
      DOCKER_USERNAME:
        from_secret: docker_username
      DOCKER_PASSWORD:
        from_secret: docker_password
    commands:
      - make gitmeta
      - make login
      - make push
    volumes:
      - name: dockersock
        path: /var/run
      - name: buildkitsock
        path: /run/buildkit
    when:
      event:
        exclude:
          - pull_request
    depends_on:
      ## Should change to e2e once we get things more stable
      - basic-integration

  - name: release
    image: plugins/github-release
    settings:
      api_key:
        from_secret: github_token
      draft: true
      files:
        - build/*
      checksum:
        - sha256
        - sha512
    when:
      event: tag
    depends_on:
      ## Should change to e2e once we get things more stable
      - basic-integration
      - iso
      - gce

volumes:
  - name: dockersock
    temp: {}
  - name: dev
    host:
      path: /dev
  - name: tmp
    temp: {}
  - name: buildkitsock
    temp: {}
  - name: buildkit-storage
    temp:
      meduim: memory

---
kind: pipeline
name: notify

clone:
  disable: true

steps:
  - name: slack
    image: plugins/slack
    settings:
      webhook:
        from_secret: slack_webhook
      channel: proj-talos-maint
    when:
      status:
        - success
        - failure

trigger:
  status:
    - success
    - failure

depends_on:
  - default
