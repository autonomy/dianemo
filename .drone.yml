---
kind: secret
name: kubeconfig

get:
  path: buildx
  name: kubeconfig

---
kind: pipeline
type: kubernetes
name: default

platform:
  os: linux
  arch: amd64

steps:
- name: setup-ci
  image: autonomy/build-container:latest
  commands:
  - git fetch --tags
  - apk add coreutils
  - echo -e "$BUILDX_KUBECONFIG" > /root/.kube/config
  - docker buildx create --name ci --buildkitd-flags="--allow-insecure-entitlement security.insecure" --use
  - docker buildx inspect --bootstrap
  - make ./_out/sonobuoy
  - make ./_out/kubectl
  environment:
    BUILDX_KUBECONFIG:
      from_secret: kubeconfig
  privileged: true
  volumes:
  - name: dockersock
    path: /var/run
  - name: docker
    path: /root/.docker/buildx
  - name: dev
    path: /dev

- name: docs
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make docs
  volumes:
  - name: dockersock
    path: /var/run
  - name: docker
    path: /root/.docker/buildx
  - name: dev
    path: /dev
  depends_on:
  - setup-ci

- name: generate
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make generate
  volumes:
  - name: dockersock
    path: /var/run
  - name: docker
    path: /root/.docker/buildx
  - name: dev
    path: /dev
  depends_on:
  - setup-ci

- name: check-dirty
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make check-dirty
  volumes:
  - name: dockersock
    path: /var/run
  - name: docker
    path: /root/.docker/buildx
  - name: dev
    path: /dev
  depends_on:
  - docs
  - generate

- name: talosctl-linux
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make talosctl-linux
  volumes:
  - name: dockersock
    path: /var/run
  - name: docker
    path: /root/.docker/buildx
  - name: dev
    path: /dev
  depends_on:
  - check-dirty

- name: talosctl-darwin
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make talosctl-darwin
  volumes:
  - name: dockersock
    path: /var/run
  - name: docker
    path: /root/.docker/buildx
  - name: dev
    path: /dev
  depends_on:
  - check-dirty

- name: kernel
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make kernel
  volumes:
  - name: dockersock
    path: /var/run
  - name: docker
    path: /root/.docker/buildx
  - name: dev
    path: /dev
  depends_on:
  - check-dirty

- name: initramfs
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make initramfs
  volumes:
  - name: dockersock
    path: /var/run
  - name: docker
    path: /root/.docker/buildx
  - name: dev
    path: /dev
  depends_on:
  - check-dirty

- name: installer
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make installer
  volumes:
  - name: dockersock
    path: /var/run
  - name: docker
    path: /root/.docker/buildx
  - name: dev
    path: /dev
  depends_on:
  - initramfs

- name: installer-local
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make installer
  environment:
    REGISTRY: registry.ci.svc:5000
  volumes:
  - name: dockersock
    path: /var/run
  - name: docker
    path: /root/.docker/buildx
  - name: dev
    path: /dev
  depends_on:
  - installer

- name: talos
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make talos
  volumes:
  - name: dockersock
    path: /var/run
  - name: docker
    path: /root/.docker/buildx
  - name: dev
    path: /dev
  depends_on:
  - initramfs

- name: talos-local
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make talos
  environment:
    REGISTRY: registry.ci.svc:5000
  volumes:
  - name: dockersock
    path: /var/run
  - name: docker
    path: /root/.docker/buildx
  - name: dev
    path: /dev
  depends_on:
  - talos

- name: lint-go
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make lint-go
  volumes:
  - name: dockersock
    path: /var/run
  - name: docker
    path: /root/.docker/buildx
  - name: dev
    path: /dev
  depends_on:
  - check-dirty

- name: lint-markdown
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make lint-markdown
  volumes:
  - name: dockersock
    path: /var/run
  - name: docker
    path: /root/.docker/buildx
  - name: dev
    path: /dev
  depends_on:
  - check-dirty

- name: lint-protobuf
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make lint-protobuf
  volumes:
  - name: dockersock
    path: /var/run
  - name: docker
    path: /root/.docker/buildx
  - name: dev
    path: /dev
  depends_on:
  - check-dirty

- name: image-aws
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make image-aws
  volumes:
  - name: dockersock
    path: /var/run
  - name: docker
    path: /root/.docker/buildx
  - name: dev
    path: /dev
  depends_on:
  - installer

- name: image-azure
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make image-azure
  volumes:
  - name: dockersock
    path: /var/run
  - name: docker
    path: /root/.docker/buildx
  - name: dev
    path: /dev
  depends_on:
  - image-aws

- name: image-digital-ocean
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make image-digital-ocean
  volumes:
  - name: dockersock
    path: /var/run
  - name: docker
    path: /root/.docker/buildx
  - name: dev
    path: /dev
  depends_on:
  - image-azure

- name: image-gcp
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make image-gcp
  volumes:
  - name: dockersock
    path: /var/run
  - name: docker
    path: /root/.docker/buildx
  - name: dev
    path: /dev
  depends_on:
  - image-digital-ocean

- name: image-vmware
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make image-vmware
  volumes:
  - name: dockersock
    path: /var/run
  - name: docker
    path: /root/.docker/buildx
  - name: dev
    path: /dev
  depends_on:
  - image-gcp

- name: unit-tests
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make unit-tests
  volumes:
  - name: dockersock
    path: /var/run
  - name: docker
    path: /root/.docker/buildx
  - name: dev
    path: /dev
  depends_on:
  - initramfs

- name: unit-tests-race
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make unit-tests-race
  volumes:
  - name: dockersock
    path: /var/run
  - name: docker
    path: /root/.docker/buildx
  - name: dev
    path: /dev
  depends_on:
  - unit-tests

- name: coverage
  image: alpine:3.10
  commands:
  - apk --no-cache add bash curl git
  - bash -c "bash <(curl -s https://codecov.io/bash) -f _out/coverage.txt -X fix"
  environment:
    CODECOV_TOKEN:
      from_secret: codecov_token
  when:
    event:
    - pull_request
  depends_on:
  - unit-tests

- name: push-local
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make push
  environment:
    DOCKER_LOGIN_ENABLED: false
    REGISTRY: registry.ci.svc:5000
  volumes:
  - name: dockersock
    path: /var/run
  - name: docker
    path: /root/.docker/buildx
  - name: dev
    path: /dev
  depends_on:
  - installer-local
  - talos-local

services:
volumes:
- name: dockersock
  host:
    path: /var/ci-docker
- name: docker
  temp: {}
- name: dev
  host:
    path: /dev
- name: tmp
  temp: {}

node:
  node-role.kubernetes.io/ci: ""

trigger:
  cron:
    exclude:
    - nightly
  event:
    exclude:
    - tag
    - promote

---
kind: pipeline
type: kubernetes
name: notify

platform:
  os: linux
  arch: amd64

clone:
  disable: true

steps:
- name: slack
  image: plugins/slack
  settings:
    channel: proj-talos-maintainers
    link_names: true
    template: "{{#if build.pull }}\n*{{#success build.status}}✓ Success{{else}}✕ Fail{{/success}}*: {{ repo.owner }}/{{ repo.name }} - <https://github.com/{{ repo.owner }}/{{ repo.name }}/pull/{{ build.pull }}|Pull Request #{{ build.pull }}>\n{{else}}\n*{{#success build.status}}✓ Success{{else}}✕ Fail{{/success}}: {{ repo.owner }}/{{ repo.name }} - Build #{{ build.number }}* (type: `{{ build.event }}`)\n{{/if}}\nCommit: <https://github.com/{{ repo.owner }}/{{ repo.name }}/commit/{{ build.commit }}|{{ truncate build.commit 8 }}>\nBranch: <https://github.com/{{ repo.owner }}/{{ repo.name }}/commits/{{ build.branch }}|{{ build.branch }}>\nAuthor: {{ build.author }}\n<{{ build.link }}|Visit build page>"
    webhook:
      from_secret: slack_webhook

services:
volumes:
- name: dockersock
  host:
    path: /var/ci-docker
- name: docker
  temp: {}
- name: dev
  host:
    path: /dev
- name: tmp
  temp: {}

node:
  node-role.kubernetes.io/ci: ""

trigger:
  status:
  - success
  - failure

depends_on:
- default
- e2e
- integration
- integration-nightly
- conformance
- nightly
- release

---
kind: signature
hmac: 7bf6515e98847d4b59992ccc92cb597428219676b1b9abd6e64c2038f3d58e6b

...
