---
kind: pipeline
name: default

platform:
  os: linux
  arch: amd64

steps:
- name: fetch-tags
  image: docker:git
  commands:
  - git fetch --tags

- name: machined
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make machined
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - fetch-tags

- name: osd
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make osd
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - fetch-tags

- name: apid
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make apid
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - fetch-tags

- name: trustd
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make trustd
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - fetch-tags

- name: ntpd
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make ntpd
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - fetch-tags

- name: networkd
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make networkd
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - fetch-tags

- name: osctl-linux
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make osctl-linux
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - fetch-tags

- name: osctl-darwin
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make osctl-darwin
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - fetch-tags

- name: rootfs
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make rootfs
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - machined
  - osd
  - trustd
  - ntpd
  - networkd
  - apid

- name: initramfs
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make initramfs
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - rootfs

- name: installer
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make installer
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - rootfs

- name: container
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make container
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - rootfs

- name: lint
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make lint
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp

- name: protolint
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make protolint
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp

- name: markdownlint
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make markdownlint
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp

- name: image-test
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make image-test
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - installer

- name: unit-tests
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make unit-tests
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - rootfs

- name: unit-tests-race
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make unit-tests-race
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - lint

- name: coverage
  image: plugins/codecov
  settings:
    files:
    - coverage.txt
    token:
      from_secret: codecov_token
  when:
    event:
    - pull_request
  depends_on:
  - unit-tests

- name: basic-integration
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make basic-integration
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - container
  - osctl-linux

- name: push
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make gitmeta
  - make login
  - make push
  environment:
    DOCKER_PASSWORD:
      from_secret: docker_password
    DOCKER_USERNAME:
      from_secret: docker_username
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  when:
    event:
      exclude:
      - pull_request
      - promote
  depends_on:
  - basic-integration

services:
- name: docker
  image: docker:19.03-dind
  entrypoint:
  - dockerd
  command:
  - --dns=8.8.8.8
  - --dns=8.8.4.4
  - --mtu=1440
  - --log-level=error
  privileged: true
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp

volumes:
- name: dockersock
  temp: {}
- name: dev
  host:
    path: /dev
- name: tmp
  temp: {}

node:
  node-role.kubernetes.io/ci: ""

trigger:
  cron:
    exclude:
    - nightly
  event:
    exclude:
    - tag
    - promote

---
kind: pipeline
name: e2e

platform:
  os: linux
  arch: amd64

steps:
- name: fetch-tags
  image: docker:git
  commands:
  - git fetch --tags

- name: machined
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make machined
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - fetch-tags

- name: osd
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make osd
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - fetch-tags

- name: apid
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make apid
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - fetch-tags

- name: trustd
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make trustd
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - fetch-tags

- name: ntpd
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make ntpd
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - fetch-tags

- name: networkd
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make networkd
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - fetch-tags

- name: osctl-linux
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make osctl-linux
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - fetch-tags

- name: osctl-darwin
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make osctl-darwin
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - fetch-tags

- name: rootfs
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make rootfs
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - machined
  - osd
  - trustd
  - ntpd
  - networkd
  - apid

- name: initramfs
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make initramfs
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - rootfs

- name: installer
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make installer
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - rootfs

- name: container
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make container
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - rootfs

- name: lint
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make lint
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp

- name: protolint
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make protolint
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp

- name: markdownlint
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make markdownlint
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp

- name: image-test
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make image-test
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - installer

- name: unit-tests
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make unit-tests
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - rootfs

- name: unit-tests-race
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make unit-tests-race
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - lint

- name: coverage
  image: plugins/codecov
  settings:
    files:
    - coverage.txt
    token:
      from_secret: codecov_token
  when:
    event:
    - pull_request
  depends_on:
  - unit-tests

- name: basic-integration
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make basic-integration
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - container
  - osctl-linux

- name: push
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make gitmeta
  - make login
  - make push
  environment:
    DOCKER_PASSWORD:
      from_secret: docker_password
    DOCKER_USERNAME:
      from_secret: docker_username
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  when:
    event:
      exclude:
      - pull_request
      - promote
  depends_on:
  - basic-integration

- name: capi
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make capi
  environment:
    AWS_SVC_ACCT:
      from_secret: aws_svc_acct
    AZURE_SVC_ACCT:
      from_secret: azure_svc_acct
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
    GCE_SVC_ACCT:
      from_secret: gce_svc_acct
    PACKET_AUTH_TOKEN:
      from_secret: packet_auth_token
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - basic-integration

- name: image-aws
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make image-aws
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - installer

- name: image-azure
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make image-azure
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - installer

- name: image-gcp
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make image-gcp
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - installer

- name: push-image-aws
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make push-image-aws
  environment:
    AWS_SVC_ACCT:
      from_secret: aws_svc_acct
    AZURE_SVC_ACCT:
      from_secret: azure_svc_acct
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
    GCE_SVC_ACCT:
      from_secret: gce_svc_acct
    PACKET_AUTH_TOKEN:
      from_secret: packet_auth_token
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - image-aws

- name: push-image-azure
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make push-image-azure
  environment:
    AWS_SVC_ACCT:
      from_secret: aws_svc_acct
    AZURE_SVC_ACCT:
      from_secret: azure_svc_acct
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
    GCE_SVC_ACCT:
      from_secret: gce_svc_acct
    PACKET_AUTH_TOKEN:
      from_secret: packet_auth_token
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - image-azure

- name: push-image-gcp
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make push-image-gcp
  environment:
    AWS_SVC_ACCT:
      from_secret: aws_svc_acct
    AZURE_SVC_ACCT:
      from_secret: azure_svc_acct
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
    GCE_SVC_ACCT:
      from_secret: gce_svc_acct
    PACKET_AUTH_TOKEN:
      from_secret: packet_auth_token
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - image-gcp

- name: e2e-integration-aws
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make e2e-integration
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
    PLATFORM: aws
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - capi
  - push-image-aws

- name: e2e-integration-azure
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make e2e-integration
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
    PLATFORM: azure
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - capi
  - push-image-azure

- name: e2e-integration-gcp
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make e2e-integration
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
    PLATFORM: gcp
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - capi
  - push-image-gcp

services:
- name: docker
  image: docker:19.03-dind
  entrypoint:
  - dockerd
  command:
  - --dns=8.8.8.8
  - --dns=8.8.4.4
  - --mtu=1440
  - --log-level=error
  privileged: true
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp

volumes:
- name: dockersock
  temp: {}
- name: dev
  host:
    path: /dev
- name: tmp
  temp: {}

node:
  node-role.kubernetes.io/ci: ""

trigger:
  target:
  - e2e

---
kind: pipeline
name: conformance

platform:
  os: linux
  arch: amd64

steps:
- name: fetch-tags
  image: docker:git
  commands:
  - git fetch --tags

- name: machined
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make machined
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - fetch-tags

- name: osd
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make osd
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - fetch-tags

- name: apid
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make apid
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - fetch-tags

- name: trustd
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make trustd
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - fetch-tags

- name: ntpd
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make ntpd
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - fetch-tags

- name: networkd
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make networkd
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - fetch-tags

- name: osctl-linux
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make osctl-linux
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - fetch-tags

- name: osctl-darwin
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make osctl-darwin
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - fetch-tags

- name: rootfs
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make rootfs
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - machined
  - osd
  - trustd
  - ntpd
  - networkd
  - apid

- name: initramfs
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make initramfs
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - rootfs

- name: installer
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make installer
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - rootfs

- name: container
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make container
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - rootfs

- name: lint
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make lint
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp

- name: protolint
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make protolint
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp

- name: markdownlint
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make markdownlint
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp

- name: image-test
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make image-test
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - installer

- name: unit-tests
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make unit-tests
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - rootfs

- name: unit-tests-race
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make unit-tests-race
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - lint

- name: coverage
  image: plugins/codecov
  settings:
    files:
    - coverage.txt
    token:
      from_secret: codecov_token
  when:
    event:
    - pull_request
  depends_on:
  - unit-tests

- name: basic-integration
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make basic-integration
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - container
  - osctl-linux

- name: push
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make gitmeta
  - make login
  - make push
  environment:
    DOCKER_PASSWORD:
      from_secret: docker_password
    DOCKER_USERNAME:
      from_secret: docker_username
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  when:
    event:
      exclude:
      - pull_request
      - promote
  depends_on:
  - basic-integration

- name: capi
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make capi
  environment:
    AWS_SVC_ACCT:
      from_secret: aws_svc_acct
    AZURE_SVC_ACCT:
      from_secret: azure_svc_acct
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
    GCE_SVC_ACCT:
      from_secret: gce_svc_acct
    PACKET_AUTH_TOKEN:
      from_secret: packet_auth_token
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - basic-integration

- name: image-aws
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make image-aws
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - installer

- name: image-azure
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make image-azure
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - installer

- name: image-gcp
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make image-gcp
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - installer

- name: push-image-aws
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make push-image-aws
  environment:
    AWS_SVC_ACCT:
      from_secret: aws_svc_acct
    AZURE_SVC_ACCT:
      from_secret: azure_svc_acct
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
    GCE_SVC_ACCT:
      from_secret: gce_svc_acct
    PACKET_AUTH_TOKEN:
      from_secret: packet_auth_token
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - image-aws

- name: push-image-azure
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make push-image-azure
  environment:
    AWS_SVC_ACCT:
      from_secret: aws_svc_acct
    AZURE_SVC_ACCT:
      from_secret: azure_svc_acct
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
    GCE_SVC_ACCT:
      from_secret: gce_svc_acct
    PACKET_AUTH_TOKEN:
      from_secret: packet_auth_token
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - image-azure

- name: push-image-gcp
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make push-image-gcp
  environment:
    AWS_SVC_ACCT:
      from_secret: aws_svc_acct
    AZURE_SVC_ACCT:
      from_secret: azure_svc_acct
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
    GCE_SVC_ACCT:
      from_secret: gce_svc_acct
    PACKET_AUTH_TOKEN:
      from_secret: packet_auth_token
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - image-gcp

- name: conformance-aws
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make e2e-integration
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
    CONFORMANCE: run
    PLATFORM: aws
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - capi
  - push-image-aws

- name: conformance-azure
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make e2e-integration
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
    CONFORMANCE: run
    PLATFORM: azure
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - capi
  - push-image-azure

- name: conformance-gcp
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make e2e-integration
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
    CONFORMANCE: run
    PLATFORM: gcp
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - capi
  - push-image-gcp

services:
- name: docker
  image: docker:19.03-dind
  entrypoint:
  - dockerd
  command:
  - --dns=8.8.8.8
  - --dns=8.8.4.4
  - --mtu=1440
  - --log-level=error
  privileged: true
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp

volumes:
- name: dockersock
  temp: {}
- name: dev
  host:
    path: /dev
- name: tmp
  temp: {}

node:
  node-role.kubernetes.io/ci: ""

trigger:
  target:
  - conformance

---
kind: pipeline
name: nightly

platform:
  os: linux
  arch: amd64

steps:
- name: fetch-tags
  image: docker:git
  commands:
  - git fetch --tags

- name: machined
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make machined
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - fetch-tags

- name: osd
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make osd
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - fetch-tags

- name: apid
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make apid
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - fetch-tags

- name: trustd
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make trustd
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - fetch-tags

- name: ntpd
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make ntpd
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - fetch-tags

- name: networkd
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make networkd
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - fetch-tags

- name: osctl-linux
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make osctl-linux
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - fetch-tags

- name: osctl-darwin
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make osctl-darwin
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - fetch-tags

- name: rootfs
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make rootfs
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - machined
  - osd
  - trustd
  - ntpd
  - networkd
  - apid

- name: initramfs
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make initramfs
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - rootfs

- name: installer
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make installer
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - rootfs

- name: container
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make container
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - rootfs

- name: lint
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make lint
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp

- name: protolint
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make protolint
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp

- name: markdownlint
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make markdownlint
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp

- name: image-test
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make image-test
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - installer

- name: unit-tests
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make unit-tests
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - rootfs

- name: unit-tests-race
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make unit-tests-race
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - lint

- name: coverage
  image: plugins/codecov
  settings:
    files:
    - coverage.txt
    token:
      from_secret: codecov_token
  when:
    event:
    - pull_request
  depends_on:
  - unit-tests

- name: basic-integration
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make basic-integration
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - container
  - osctl-linux

- name: push
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make gitmeta
  - make login
  - make push
  environment:
    DOCKER_PASSWORD:
      from_secret: docker_password
    DOCKER_USERNAME:
      from_secret: docker_username
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  when:
    event:
      exclude:
      - pull_request
      - promote
  depends_on:
  - basic-integration

- name: capi
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make capi
  environment:
    AWS_SVC_ACCT:
      from_secret: aws_svc_acct
    AZURE_SVC_ACCT:
      from_secret: azure_svc_acct
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
    GCE_SVC_ACCT:
      from_secret: gce_svc_acct
    PACKET_AUTH_TOKEN:
      from_secret: packet_auth_token
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - basic-integration

- name: image-aws
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make image-aws
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - installer

- name: image-azure
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make image-azure
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - installer

- name: image-gcp
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make image-gcp
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - installer

- name: push-image-aws
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make push-image-aws
  environment:
    AWS_SVC_ACCT:
      from_secret: aws_svc_acct
    AZURE_SVC_ACCT:
      from_secret: azure_svc_acct
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
    GCE_SVC_ACCT:
      from_secret: gce_svc_acct
    PACKET_AUTH_TOKEN:
      from_secret: packet_auth_token
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - image-aws

- name: push-image-azure
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make push-image-azure
  environment:
    AWS_SVC_ACCT:
      from_secret: aws_svc_acct
    AZURE_SVC_ACCT:
      from_secret: azure_svc_acct
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
    GCE_SVC_ACCT:
      from_secret: gce_svc_acct
    PACKET_AUTH_TOKEN:
      from_secret: packet_auth_token
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - image-azure

- name: push-image-gcp
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make push-image-gcp
  environment:
    AWS_SVC_ACCT:
      from_secret: aws_svc_acct
    AZURE_SVC_ACCT:
      from_secret: azure_svc_acct
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
    GCE_SVC_ACCT:
      from_secret: gce_svc_acct
    PACKET_AUTH_TOKEN:
      from_secret: packet_auth_token
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - image-gcp

- name: conformance-aws
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make e2e-integration
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
    CONFORMANCE: run
    PLATFORM: aws
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - capi
  - push-image-aws

- name: conformance-azure
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make e2e-integration
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
    CONFORMANCE: run
    PLATFORM: azure
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - capi
  - push-image-azure

- name: conformance-gcp
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make e2e-integration
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
    CONFORMANCE: run
    PLATFORM: gcp
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - capi
  - push-image-gcp

services:
- name: docker
  image: docker:19.03-dind
  entrypoint:
  - dockerd
  command:
  - --dns=8.8.8.8
  - --dns=8.8.4.4
  - --mtu=1440
  - --log-level=error
  privileged: true
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp

volumes:
- name: dockersock
  temp: {}
- name: dev
  host:
    path: /dev
- name: tmp
  temp: {}

node:
  node-role.kubernetes.io/ci: ""

trigger:
  cron:
  - nightly

---
kind: pipeline
name: release

platform:
  os: linux
  arch: amd64

steps:
- name: fetch-tags
  image: docker:git
  commands:
  - git fetch --tags

- name: machined
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make machined
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - fetch-tags

- name: osd
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make osd
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - fetch-tags

- name: apid
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make apid
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - fetch-tags

- name: trustd
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make trustd
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - fetch-tags

- name: ntpd
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make ntpd
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - fetch-tags

- name: networkd
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make networkd
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - fetch-tags

- name: osctl-linux
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make osctl-linux
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - fetch-tags

- name: osctl-darwin
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make osctl-darwin
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - fetch-tags

- name: rootfs
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make rootfs
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - machined
  - osd
  - trustd
  - ntpd
  - networkd
  - apid

- name: initramfs
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make initramfs
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - rootfs

- name: installer
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make installer
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - rootfs

- name: container
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make container
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - rootfs

- name: lint
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make lint
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp

- name: protolint
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make protolint
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp

- name: markdownlint
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make markdownlint
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp

- name: image-test
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make image-test
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - installer

- name: unit-tests
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make unit-tests
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - rootfs

- name: unit-tests-race
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make unit-tests-race
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - lint

- name: coverage
  image: plugins/codecov
  settings:
    files:
    - coverage.txt
    token:
      from_secret: codecov_token
  when:
    event:
    - pull_request
  depends_on:
  - unit-tests

- name: basic-integration
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make basic-integration
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - container
  - osctl-linux

- name: push
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make gitmeta
  - make login
  - make push
  environment:
    DOCKER_PASSWORD:
      from_secret: docker_password
    DOCKER_USERNAME:
      from_secret: docker_username
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  when:
    event:
      exclude:
      - pull_request
      - promote
  depends_on:
  - basic-integration

- name: kernel
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make kernel
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp

- name: image-aws
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make image-aws
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - installer

- name: image-azure
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make image-azure
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - installer

- name: image-digital-ocean
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make image-digital-ocean
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - installer

- name: image-gcp
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make image-gcp
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - installer

- name: image-vmware
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make image-vmware
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - installer

- name: iso
  pull: always
  image: autonomy/build-container:latest
  commands:
  - make iso
  environment:
    BINDIR: /usr/local/bin
    BUILDKIT_HOST: ${BUILDKIT_HOST=tcp://buildkitd.ci.svc:1234}
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp
  depends_on:
  - installer

- name: release
  image: plugins/github-release
  settings:
    api_key:
      from_secret: github_token
    checksum:
    - sha256
    - sha512
    draft: true
    files:
    - build/*
  when:
    event:
    - tag
  depends_on:
  - kernel
  - iso
  - image-gcp
  - image-azure
  - image-aws
  - push

services:
- name: docker
  image: docker:19.03-dind
  entrypoint:
  - dockerd
  command:
  - --dns=8.8.8.8
  - --dns=8.8.4.4
  - --mtu=1440
  - --log-level=error
  privileged: true
  volumes:
  - name: dockersock
    path: /var/run
  - name: dev
    path: /dev
  - name: tmp
    path: /tmp

volumes:
- name: dockersock
  temp: {}
- name: dev
  host:
    path: /dev
- name: tmp
  temp: {}

node:
  node-role.kubernetes.io/ci: ""

trigger:
  event:
  - tag

---
kind: pipeline
name: notify

platform:
  os: linux
  arch: amd64

steps:
- name: slack
  image: plugins/slack
  settings:
    channel: proj-talos-maintainers
    link_names: true
    template: "{{#if build.pull }}\n*{{#success build.status}}✓ Success{{else}}✕ Fail{{/success}}*: {{ repo.owner }}/{{ repo.name }} - <https://github.com/{{ repo.owner }}/{{ repo.name }}/pull/{{ build.pull }}|Pull Request #{{ build.pull }}>\n{{else}}\n*{{#success build.status}}✓ Success{{else}}✕ Fail{{/success}}: {{ repo.owner }}/{{ repo.name }} - Build #{{ build.number }}* (type: `{{ build.event }}`)\n{{/if}}\nCommit: <https://github.com/{{ repo.owner }}/{{ repo.name }}/commit/{{ build.commit }}|{{ truncate build.commit 8 }}>\nBranch: <https://github.com/{{ repo.owner }}/{{ repo.name }}/commits/{{ build.branch }}|{{ build.branch }}>\nAuthor: {{ build.author }}\n<{{ build.link }}|Visit build page>"
    webhook:
      from_secret: slack_webhook

services:
volumes:
- name: dockersock
  temp: {}
- name: dev
  host:
    path: /dev
- name: tmp
  temp: {}

node:
  node-role.kubernetes.io/ci: ""

trigger:
  status:
  - success
  - failure

depends_on:
- default
- e2e
- conformance
- nightly
- release

...
