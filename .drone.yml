---
kind: pipeline
name: default

steps:
  - name: fetch
    image: docker:git
    commands:
      - git fetch --tags
    when:
      event: tag

  - name: lint
    image: autonomy/build-container:latest
    pull: always
    environment:
      BUILDKIT_HOST: tcp://buildkitd.ci.svc:1234
      BINDIR: /usr/local/bin
    commands:
      - make lint
    volumes:
      - name: docker-socket
        path: /var/run/docker.sock
    depends_on:
      - fetch

  - name: build
    image: autonomy/build-container:latest
    pull: always
    environment:
      BUILDKIT_HOST: tcp://buildkitd.ci.svc:1234
      BINDIR: /usr/local/bin
    commands:
      - make drone
    volumes:
      - name: docker-socket
        path: /var/run/docker.sock
    depends_on:
      - lint

  - name: test
    image: 'autonomy/test:${DRONE_COMMIT_SHA:0:7}'
    privileged: true
    commands:
      - cd /src
      - test.sh
      - cp /src/coverage.txt /drone/src/coverage.txt
    volumes:
      - name: docker-socket
        path: /var/run/docker.sock
      - name: containerd
        path: /var/lib/containerd
    depends_on:
      - build

  - name: coverage
    image: plugins/codecov
    pull: always
    settings:
      token:
        from_secret: codecov_token
      files:
        - coverage.txt
    depends_on:
      - test

  - name: basic-integration
    image: autonomy/build-container:latest
    pull: always
    environment:
      BUILDKIT_HOST: tcp://buildkitd.ci.svc:1234
      BINDIR: /usr/local/bin
    commands:
      - make basic-integration
    volumes:
      - name: docker-socket
        path: /var/run/docker.sock
      - name: tmp
        path: /tmp
    depends_on:
      - build

  # - name: e2e-integration
  #   image: autonomy/build-container:latest
  #   pull: always
  #   err_ignore: true
  #   environment:
  #     BUILDKIT_HOST: tcp://buildkitd.ci.svc:1234
  #     BINDIR: /usr/local/bin
  #     PACKET_AUTH_TOKEN:
  #       from_secret: packet_auth_token
  #     PACKET_PROJECT_ID:
  #       from_secret: packet_project_id
  #     PACKET_PXE_SERVER:
  #       from_secret: packet_pxe_server
  #   commands:
  #     - make e2e-integration
  #   volumes:
  #     - name: docker-socket
  #       path: /var/run/docker.sock
  #     - name: tmp
  #       path: /tmp
  #   when:
  #     event:
  #       - push
  #       - tag
  #     branch:
  #       - master
  #   depends_on:
  #     - basic-integration

  - name: push
    image: autonomy/build-container:latest
    pull: always
    environment:
      DOCKER_USERNAME:
        from_secret: docker_username
      DOCKER_PASSWORD:
        from_secret: docker_password
    commands:
      - make gitmeta
      - make login
      - make push
    volumes:
      - name: docker-socket
        path: /var/run/docker.sock
    when:
      event:
        exclude:
          - pull_request
    depends_on:
      - basic-integration

  - name: iso
    image: 'autonomy/installer:${DRONE_COMMIT_SHA:0:7}'
    pull: always
    environment:
      BUILDKIT_HOST: tcp://buildkitd.ci.svc:1234
      BINDIR: /usr/local/bin
    commands:
      - entrypoint.sh iso
    volumes:
      - name: docker-socket
        path: /var/run/docker.sock
    when:
      event: tag
    depends_on:
      - push

  - name: gce
    image: 'autonomy/installer:${DRONE_COMMIT_SHA:0:7}'
    pull: always
    privileged: true
    commands:
      - mkdir /out
      - bash entrypoint.sh install -n disk -r -p googlecloud -u none
      - tar -C /out -czf ./build/talos-gce.tar.gz disk.raw
    volumes:
      - name: dev
        path: /dev
    when:
      event: tag
    depends_on:
      - push

  - name: release
    image: plugins/github-release
    settings:
      api_key:
        from_secret: github_token
      draft: true
      files:
        - build/*
      checksum:
        - sha256
        - sha512
    when:
      event: tag
    depends_on:
      - iso
      - gce

volumes:
  - name: docker-socket
    host:
      path: /run/docker.sock
  - name: dev
    host:
      path: /dev
  - name: tmp
    temp: {}
  - name: containerd
    temp: {}
---
kind: pipeline
name: notify

clone:
  disable: true

steps:
  - name: slack
    image: plugins/slack
    settings:
      webhook:
        from_secret: slack_webhook
      channel: proj-talos-maint
    when:
      status:
        - success
        - failure

trigger:
  status:
    - success
    - failure

depends_on:
  - default
