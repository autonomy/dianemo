---
kind: pipeline
name: default

services:
  - name: docker
    image: docker:19.03.0-rc3-dind
    privileged: true
    command:
      - --dns=8.8.8.8
    volumes:
      - name: docker-socket
        path: /var/run
      - name: dev
        path: /dev
      - name: tmp
        path: /tmp

steps:
  - name: fetch
    image: docker:git
    commands:
      - git fetch --tags
    when:
      event: tag

  - name: lint
    image: autonomy/build-container:latest
    pull: always
    commands:
      - make ARCH=amd64 lint
    volumes:
      - name: docker-socket
        path: /var/run

  - name: build-amd64
    image: autonomy/build-container:latest
    pull: always
    commands:
      - docker buildx create --name amd64 --driver docker-container --use tcp://docker-amd64.ci.svc:2375
      - mkdir -p ./out/linux_amd64/images
      - make ARCH=amd64
    volumes:
      - name: docker-socket
        path: /var/run
    depends_on:
      - lint

  # - name: build-arm64
  #   image: autonomy/build-container:latest
  #   pull: always
  #   commands:
  #     - docker buildx create --name arm64 --driver docker-container --use tcp://docker-arm64.ci.svc:2375
  #     - mkdir -p ./out/linux_arm64/images
  #     - make ARCH=arm64
  #   volumes:
  #     - name: docker-socket
  #       path: /var/run
  #   depends_on:
  #     - lint
  #   err_ignore: true

  - name: test
    image: autonomy/build-container:latest
    pull: always
    commands:
      - make test
    volumes:
      - name: docker-socket
        path: /var/run
    depends_on:
      - build-amd64

  - name: coverage
    image: plugins/codecov
    settings:
      token:
        from_secret: codecov_token
      files:
        - coverage.txt
    depends_on:
      - test

  - name: basic-integration
    image: autonomy/build-container:latest
    pull: always
    commands:
      - make integration
    volumes:
      - name: docker-socket
        path: /var/run
      - name: tmp
        path: /tmp
    depends_on:
      - coverage
    when:
      event: pull_request

  - name: iso
    image: autonomy/build-container:latest
    pull: always
    environment:
      BINDIR: /usr/local/bin
    commands:
      - make talos-iso
    volumes:
      - name: docker-socket
        path: /var/run
    when:
      event: tag
    depends_on:
      - basic-integration

  - name: gce
    image: autonomy/build-container:latest
    pull: always
    environment:
      BINDIR: /usr/local/bin
    commands:
      - make talos-gce
    volumes:
      - name: docker-socket
        path: /var/run
      - name: dev
        path: /dev
    when:
      event: tag
    depends_on:
      ## Should change to e2e once we get things more stable
      - basic-integration

  - name: push
    image: autonomy/build-container:latest
    pull: always
    environment:
      DOCKER_USERNAME:
        from_secret: docker_username
      DOCKER_PASSWORD:
        from_secret: docker_password
    commands:
      - make gitmeta
      - make login
      - make push
    volumes:
      - name: docker-socket
        path: /var/run
    when:
      event:
        exclude:
          - pull_request
    depends_on:
      - basic-integration

  - name: release
    image: plugins/github-release
    settings:
      api_key:
        from_secret: github_token
      draft: true
      files:
        - build/*
      checksum:
        - sha256
        - sha512
    when:
      event: tag
    depends_on:
      - push
      - iso
      - gce

volumes:
  - name: docker-socket
    temp: {}
  - name: dev
    host:
      path: /dev
  - name: tmp
    temp: {}
---
kind: pipeline
name: notify

clone:
  disable: true

steps:
  - name: slack
    image: plugins/slack
    settings:
      webhook:
        from_secret: slack_webhook
      channel: proj-talos-maint
    when:
      status:
        - success
        - failure

trigger:
  status:
    - success
    - failure

depends_on:
  - default
