metadata:
  repository: talos/rootfs
  variables:
    rootfs: /rootfs
    srcCNI: https://github.com/containernetworking/cni/releases/download/v0.6.0/cni-amd64-v0.6.0.tgz
    srcCNIPlugins: https://github.com/containernetworking/plugins/releases/download/v0.7.4/cni-plugins-amd64-v0.7.4.tgz
    srcContainerd: https://github.com/containerd/containerd/releases/download/v1.2.1/containerd-1.2.1.linux-amd64.tar.gz
    srcCRITools: https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.13.0/crictl-v1.13.0-linux-amd64.tar.gz
    srcLibseccomp: https://github.com/seccomp/libseccomp/releases/download/v2.3.3/libseccomp-2.3.3.tar.gz
    srcKubeadm: https://storage.googleapis.com/kubernetes-release/release/v1.13.1/bin/linux/amd64/kubeadm
    srcRunc: https://github.com/opencontainers/runc/releases/download/v1.0.0-rc6/runc.amd64
pipeline:
  stages:
  - image
stages:
  image:
    tasks:
    - libseccomp
    - libblkid
    - libuuid
    - certs
    - crictl
    - containerd
    - runc
    - cni
    - kubeadm
    - cleanup
    - udevd
    - test
    - rootfs
tasks:
  certs:
    template: |
      RUN mkdir -p {{ index .Variables "rootfs" }}/etc/ssl/certs
      RUN curl -o {{ index .Variables "rootfs" }}/etc/ssl/certs/ca-certificates.crt https://curl.haxx.se/ca/cacert.pem
  cleanup:
    template: |
      COPY src/cleanup.sh /toolchain/bin
      RUN chmod +x /toolchain/bin/cleanup.sh
      RUN /toolchain/bin/cleanup.sh {{ index .Variables "rootfs" }}
  containerd:
    template: |
      RUN curl -L {{ index .Variables "srcContainerd" }} | tar --strip-components=1 -xz -C {{ index .Variables "rootfs" }}/bin
      RUN rm {{ index .Variables "rootfs" }}/bin/ctr
  crictl:
    template: |
      RUN curl -L {{ index .Variables "srcCRITools" }} | tar -xz -C {{ index .Variables "rootfs" }}/bin
  libblkid:
    template: |
      RUN cp /toolchain/lib/libblkid.* {{ index .Variables "rootfs" }}/lib
  libuuid:
    template: |
      RUN cp /toolchain/lib/libuuid.* {{ index .Variables "rootfs" }}/lib
  libseccomp:
    template: |
      FROM autonomy/toolchain:690a03a AS {{ .Docker.CurrentStage }}
      RUN rm -rf {{ index .Variables "rootfs" }}/etc
      RUN mkdir -p {{ index .Variables "rootfs" }}/var/etc
      RUN ln -sv var/etc {{ index .Variables "rootfs" }}/etc
      WORKDIR /toolchain/usr/local/src/{{ .Docker.CurrentStage }}
      RUN curl -L {{index .Variables "srcLibseccomp" }} | tar --strip-components=1 -xz
      WORKDIR build
      RUN ../configure \
            --prefix=/usr \
            --disable-static
      RUN make -j $(($(nproc) / 2))
      RUN make install DESTDIR={{ index .Variables "rootfs" }}
  cni:
    template: |
      RUN ln -sv ../opt {{ index .Variables "rootfs" }}/var/opt
      RUN mkdir -p {{ index .Variables "rootfs" }}/opt/cni/bin
      RUN curl -L {{ index .Variables "srcCNI" }} | tar -xz -C {{ index .Variables "rootfs" }}/opt/cni/bin
      RUN curl -L {{ index .Variables "srcCNIPlugins" }} | tar -xz -C {{ index .Variables "rootfs" }}/opt/cni/bin
  kubeadm:
    template: |
      RUN curl --retry 3 --retry-delay 60 -L {{ index .Variables "srcKubeadm" }} -o {{ index .Variables "rootfs" }}/bin/kubeadm
      RUN chmod +x {{ index .Variables "rootfs" }}/bin/kubeadm
  test:
    template: |
      RUN chmod +x ./hack/test.sh
      RUN ./hack/test.sh --unit
      RUN ./hack/test.sh --lint ./hack/golangci-lint.yaml
  udevd:
    template: |
      FROM autonomy/toolchain:690a03a AS {{ .Docker.CurrentStage }}
      RUN mkdir -p /etc/ssl/certs
      RUN ln -s /toolchain/etc/ssl/certs/ca-certificates /etc/ssl/certs/ca-certificates
      RUN curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | bash -s -- -b $GOPATH/bin v1.10.1
      ENV GO111MODULE auto
      WORKDIR /src/github.com/autonomy/talos/src/rootfs/udevd
      COPY ./udevd ./
      RUN go mod download
      RUN go mod verify
      RUN go mod vendor
      CMD ["false"]
      RUN GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build  -a -ldflags "-s -w" -o /{{ .Docker.CurrentStage }}
  rootfs:
    template: |
      FROM scratch
      LABEL maintainer="Andrew Rynhard <andrew.rynhard@autonomy.io>"
      COPY --from=libseccomp {{ index .Variables "rootfs" }} {{ index .Variables "rootfs" }}
      COPY --from=udevd /udevd {{ index .Variables "rootfs" }}/bin/udevd
  runc:
    template: |
      RUN curl -L {{ index .Variables "srcRunc" }} -o {{ index .Variables "rootfs" }}/bin/runc
      RUN chmod +x {{ index .Variables "rootfs" }}/bin/runc
